<?php

namespace LjdsBundle\Entity;

use Doctrine\ORM\EntityRepository;
use PDO;

/**
 * GifRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GifRepository extends EntityRepository
{
    private $GIFS_PER_PAGE = 5;

    public function findByGifState($gifState, $page)
    {
        $firstResult = $this->GIFS_PER_PAGE * $page - $this->GIFS_PER_PAGE;

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('g')
            ->from('LjdsBundle\Entity\Gif', 'g')
            ->where('g.gifStatus = ' . $gifState)
            ->orderBy('g.publishDate', 'DESC')
            ->setFirstResult($firstResult)
            ->setMaxResults($this->GIFS_PER_PAGE);

        $query = $qb->getQuery();
        $query->execute();
        return $query->getResult();
    }

    public function getPaginationPagesCount($gifState)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(g.id)')
            ->from('LjdsBundle\Entity\Gif', 'g')
            ->where('g.gifStatus = ' . $gifState);
        $query = $qb->getQuery();

        return intval($query->getSingleScalarResult());
    }

    public function getTopSubmitters()
    {
        $conn = $this->getEntityManager()->getConnection();
        $stmt = $conn->prepare('SELECT submittedBy as name, COUNT(*) as gifsCount
                              FROM gif GROUP BY submittedBy ORDER BY gifsCount DESC');
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    public function getForFeed()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('g')
            ->from('LjdsBundle\Entity\Gif', 'g')
            ->where('g.gifStatus = ' . GifState::PUBLISHED)
            ->orderBy('g.publishDate', 'DESC');

        $query = $qb->getQuery();
        $query->execute();
        return $query->getResult();
    }
}
